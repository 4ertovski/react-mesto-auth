{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst headers = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\nconst checkResponse = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Ошибка: ${response.status}`);\n};\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers\n  }).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    }\n  }).then(response => response);\n};","map":{"version":3,"names":["BASE_URL","headers","Accept","checkResponse","response","ok","json","Promise","reject","status","register","email","password","fetch","method","body","JSON","stringify","then","authorize","checkToken","token"],"sources":["/Users/les/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n};\nconst checkResponse = (response) => {\n    if (response.ok) {\n        return response.json()\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n}\n\nexport const register = ( email, password ) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({ email, password }),\n    })\n        .then(checkResponse)\n};\n\nexport const authorize = ( email, password ) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({ email, password }),\n    })\n        .then(checkResponse)\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers,\n    })\n        .then(response => {\n            if (response.status === 200) {\n                return response.json()\n            }\n        })\n        .then(response => response)\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,OAAO,GAAG;EACZC,MAAM,EAAE,kBAAkB;EAC1B,cAAc,EAAE;AACpB,CAAC;AACD,MAAMC,aAAa,GAAIC,QAAQ,IAAK;EAChC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACb,OAAOD,QAAQ,CAACE,IAAI,EAAE;EAC1B;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAEC,KAAK,EAAEC,QAAQ,KAAM;EAC3C,OAAOC,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdb,OAAO;IACPc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGM,IAAI,CAACf,aAAa,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAGA,CAAER,KAAK,EAAEC,QAAQ,KAAM;EAC5C,OAAOC,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdb,OAAO;IACPc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGM,IAAI,CAACf,aAAa,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAOR,KAAK,CAAE,GAAEb,QAAS,WAAU,EAAE;IACjCc,MAAM,EAAE,KAAK;IACbb;EACJ,CAAC,CAAC,CACGiB,IAAI,CAACd,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MACzB,OAAOL,QAAQ,CAACE,IAAI,EAAE;IAC1B;EACJ,CAAC,CAAC,CACDY,IAAI,CAACd,QAAQ,IAAIA,QAAQ,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}