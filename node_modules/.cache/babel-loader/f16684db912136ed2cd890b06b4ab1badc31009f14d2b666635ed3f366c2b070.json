{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst headers = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\nexport const handleResponse = res => {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Error! : ${res.status}`);\n  }\n};\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(res => res);\n};","map":{"version":3,"names":["BASE_URL","headers","Accept","handleResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","body","JSON","stringify","then","authorize","checkToken","token","Authorization"],"sources":["/Users/les/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n};\n\nexport const handleResponse = (res) => {\n    if (res.ok) {\n        return res.json();\n    } else {\n        return Promise.reject(`Error! : ${res.status}`)\n    }\n}\n\nexport const register = ( email, password ) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({ email, password }),\n    })\n        .then(handleResponse)\n};\n\nexport const authorize = ( email, password ) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({ email, password }),\n    })\n        .then(handleResponse)\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            ...headers,\n            Authorization: `Bearer ${token}`,\n        },\n    })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        })\n        .then(res => res)\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,OAAO,GAAG;EACZC,MAAM,EAAE,kBAAkB;EAC1B,cAAc,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,GAAG,IAAK;EACnC,IAAIA,GAAG,CAACC,EAAE,EAAE;IACR,OAAOD,GAAG,CAACE,IAAI,EAAE;EACrB,CAAC,MAAM;IACH,OAAOC,OAAO,CAACC,MAAM,CAAE,YAAWJ,GAAG,CAACK,MAAO,EAAC,CAAC;EACnD;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAEC,KAAK,EAAEC,QAAQ,KAAM;EAC3C,OAAOC,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdb,OAAO;IACPc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGM,IAAI,CAACf,cAAc,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAGA,CAAER,KAAK,EAAEC,QAAQ,KAAM;EAC5C,OAAOC,KAAK,CAAE,GAAEb,QAAS,SAAQ,EAAE;IAC/Bc,MAAM,EAAE,MAAM;IACdb,OAAO;IACPc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGM,IAAI,CAACf,cAAc,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAOR,KAAK,CAAE,GAAEb,QAAS,WAAU,EAAE;IACjCc,MAAM,EAAE,KAAK;IACbb,OAAO,EAAE;MACL,GAAGA,OAAO;MACVqB,aAAa,EAAG,UAASD,KAAM;IACnC;EACJ,CAAC,CAAC,CACGH,IAAI,CAACd,GAAG,IAAI;IACT,IAAIA,GAAG,CAACK,MAAM,KAAK,GAAG,EAAE;MACpB,OAAOL,GAAG,CAACE,IAAI,EAAE;IACrB;EACJ,CAAC,CAAC,CACDY,IAAI,CAACd,GAAG,IAAIA,GAAG,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}